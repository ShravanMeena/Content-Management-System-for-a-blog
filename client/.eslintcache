[{"/Users/shravanmeena/Desktop/mern/lifeblog/client/src/index.js":"1","/Users/shravanmeena/Desktop/mern/lifeblog/client/src/reportWebVitals.js":"2","/Users/shravanmeena/Desktop/mern/lifeblog/client/src/App.js":"3","/Users/shravanmeena/Desktop/mern/lifeblog/client/src/Login.js":"4","/Users/shravanmeena/Desktop/mern/lifeblog/client/src/Header.js":"5","/Users/shravanmeena/Desktop/mern/lifeblog/client/src/Register.js":"6","/Users/shravanmeena/Desktop/mern/lifeblog/client/src/Card.js":"7","/Users/shravanmeena/Desktop/mern/lifeblog/client/src/PostCreate.js":"8"},{"size":547,"mtime":1608637204030,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608632857103,"results":"11","hashOfConfig":"10"},{"size":1260,"mtime":1608656039961,"results":"12","hashOfConfig":"10"},{"size":2847,"mtime":1608663394248,"results":"13","hashOfConfig":"10"},{"size":1683,"mtime":1608663088475,"results":"14","hashOfConfig":"10"},{"size":2898,"mtime":1608663394221,"results":"15","hashOfConfig":"10"},{"size":10632,"mtime":1608663394283,"results":"16","hashOfConfig":"10"},{"size":3914,"mtime":1608663394216,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1tcuio1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/shravanmeena/Desktop/mern/lifeblog/client/src/index.js",[],["37","38"],"/Users/shravanmeena/Desktop/mern/lifeblog/client/src/reportWebVitals.js",[],"/Users/shravanmeena/Desktop/mern/lifeblog/client/src/App.js",[],"/Users/shravanmeena/Desktop/mern/lifeblog/client/src/Login.js",["39"],"/Users/shravanmeena/Desktop/mern/lifeblog/client/src/Header.js",["40","41","42","43","44","45","46","47","48"],"/Users/shravanmeena/Desktop/mern/lifeblog/client/src/Register.js",["49"],"import React, { Component } from \"react\";\nimport {\n  Container,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  Alert,\n} from \"reactstrap\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      error: false,\n    };\n  }\n\n  submitForm = () => {\n    if (!this.state.name && !this.state.email && !this.state.password) {\n      this.setState({\n        error: true,\n      });\n      return;\n    }\n    const data = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n    };\n    axios({\n      method: \"post\",\n      url: `http://localhost:8000/register`,\n      data: data,\n    })\n      .then((res) => {\n        this.props.history.push(\"/user/post\");\n      })\n      .catch((err) => {\n        console.log(\"Error : \" + err);\n      });\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <Alert color='warning'>No, Validation XXXXXXX!</Alert>\n        <Container className='formContainer'>\n          <h2>Register</h2>\n          {this.state.error ? (\n            <Alert color='danger'>\n              Required! and at least 6 character long and provide valid email.\n            </Alert>\n          ) : null}\n\n          <Form className='form'>\n            <Col>\n              <FormGroup>\n                <Label>Name</Label>\n                <Input\n                  type='name'\n                  name='name'\n                  onChange={this.handleChange}\n                  id='name'\n                  placeholder='Joe bae'\n                />\n              </FormGroup>\n            </Col>\n\n            <Col>\n              <FormGroup>\n                <Label>Email</Label>\n                <Input\n                  type='email'\n                  name='email'\n                  onChange={this.handleChange}\n                  id='exampleEmail'\n                  placeholder='myemail@email.com'\n                />\n              </FormGroup>\n            </Col>\n\n            <Col>\n              <FormGroup>\n                <Label for='examplePassword'>Password</Label>\n                <Input\n                  type='password'\n                  onChange={this.handleChange}\n                  name='password'\n                  id='examplePassword'\n                  placeholder='********'\n                />\n              </FormGroup>\n            </Col>\n            <Button onClick={() => this.submitForm()}>Submit</Button>\n            <p>\n              Already have an account?{\" \"}\n              <a onClick={() => this.props.history.push(\"/login/\")} href=''>\n                Login here.\n              </a>\n            </p>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","/Users/shravanmeena/Desktop/mern/lifeblog/client/src/Card.js",["50"],"import React, { Component } from \"react\";\nimport {\n  Card,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Button,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input,\n  Container,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Alert,\n} from \"reactstrap\";\nimport axios from \"axios\";\n\nimport \"./App.css\";\n\nexport default class Cards extends Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: [],\n      post_details: [],\n      post_details_show: false,\n      edit_post: [],\n      title: \"\",\n      creator: \"\",\n      message: \"\",\n      comment: \"\",\n      tags: [],\n      color: \"\",\n      alert: false,\n    };\n  }\n  getPosts = () => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:8000/user/post`,\n      //   headers: {\n      //     Authorization: `Bearer ${this.props.getUserData.data.token}`,\n      //   },\n    })\n      .then((res) => {\n        this.setState({\n          posts: res.data,\n        });\n      })\n      .catch((err) => {\n        console.log(\"Error : \" + err);\n      });\n  };\n\n  editPosts = (id) => {\n    alert(\"Working on it!!!!\");\n    const data = {\n      title: this.state.title,\n      creator: this.state.creator,\n      message: this.state.message,\n      comment: this.state.comment,\n      tags: this.state.tags,\n      color: this.state.color,\n    };\n    axios({\n      method: \"patch\",\n      url: `http://localhost:8000/user/post/${id}/`,\n      //   headers: {\n      //     Authorization: `Bearer ${this.props.getUserData.data.token}`,\n      //   },\n      data: data,\n    })\n      .then((res) => {\n        this.getSinglePostDetails();\n        this.setState({\n          edit: false,\n        });\n      })\n      .catch((err) => {\n        console.log(\"Error : \" + err);\n      });\n  };\n\n  componentDidMount() {\n    this.getPosts();\n    this.setState({\n      title: this.state.edit_post.title,\n      creator: this.state.edit_post.creator,\n      message: this.state.edit_post.message,\n      comment: this.state.edit_post.comment,\n      tags: this.state.edit_post.tags,\n      color: this.state.edit_post.color,\n    });\n  }\n\n  createLike = (id) => {\n    axios({\n      method: \"patch\",\n      url: `http://localhost:8000/user/post/like/${id}`,\n      //   headers: {\n      //     Authorization: `Bearer ${this.props.getUserData.data.token}`,\n      //   },\n    })\n      .then((res) => {\n        this.getPosts();\n      })\n      .catch((err) => {\n        console.log(\"Error : \" + err);\n      });\n  };\n\n  createComment = (id) => {\n    axios({\n      method: \"patch\",\n      url: `http://localhost:8000/user/post/comment/${id}`,\n      //   headers: {\n      //     Authorization: `Bearer ${this.props.getUserData.data.token}`,\n      //   },\n    })\n      .then((res) => {\n        this.getPosts();\n      })\n      .catch((err) => {\n        console.log(\"Error : \" + err);\n      });\n  };\n\n  getSinglePostDetails = (id) => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:8000/user/post/${id}`,\n      //   headers: {\n      //     Authorization: `Bearer ${this.props.getUserData.data.token}`,\n      //   },\n    })\n      .then((res) => {\n        this.setState({\n          post_details: res.data,\n          post_details_show: true,\n          edit_post: res.data,\n        });\n      })\n      .catch((err) => {\n        console.log(\"Error : \" + err);\n      });\n  };\n\n  // shouldComponentUpdate() {\n  //   if (!(this.state.edit_post.length === 0)) {\n  //     this.setState({\n  //       title: this.state.edit_post.title,\n  //       message: this.state.edit_post.message,\n  //       creator: this.state.edit_post.creator,\n  //     });\n  //   }\n  //   return true;\n  // }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  delete = (id) => {\n    axios({\n      method: \"delete\",\n      url: `http://localhost:8000/user/post/${id}`,\n      //   headers: {\n      //     Authorization: `Bearer ${this.props.getUserData.data.token}`,\n      //   },\n    })\n      .then((res) => {\n        this.setState({\n          alert: true,\n        });\n        this.getPosts();\n      })\n      .catch((err) => {\n        console.log(\"Error : \" + err);\n      });\n  };\n\n  render() {\n    const post = this.state.post_details;\n\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}>\n        {!this.state.post_details_show ? (\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n              // padding: 20,\n            }}>\n            {this.state.posts.reverse().map((post, index) => {\n              return (\n                <Card\n                  key={index}\n                  style={{\n                    //   minWidth: \"20%\",\n                    //   maxWidth: \"30%\",\n                    width: \"30%\",\n                    marginBottom: 30,\n                    height: \"auto\",\n                    background: post.color,\n                    marginLeft: 20,\n\n                    boxShadow:\n                      \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n                  }}>\n                  <CardBody>\n                    <CardTitle tag='h5'>{post.title}</CardTitle>\n                    <CardSubtitle tag='h6' className='mb-2 text-muted'>\n                      {post.creator}\n                      {post.color}\n                    </CardSubtitle>\n                    <CardText>{post.message}</CardText>\n                    <Button onClick={() => this.createLike(post._id)}>\n                      {post.likeCount} Likes\n                    </Button>\n\n                    <Button onClick={() => this.getSinglePostDetails(post._id)}>\n                      Details\n                    </Button>\n                  </CardBody>\n                </Card>\n              );\n            })}\n          </div>\n        ) : (\n          <Card\n            style={{\n              //   minWidth: \"20%\",\n              //   maxWidth: \"30%\",\n              width: \"100%\",\n              marginTop: 30,\n              height: \"auto\",\n              background: post.color,\n              padding: 20,\n              boxShadow:\n                \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n            }}>\n            {this.state.alert ? (\n              <Alert color='success'>Deleted! refresh</Alert>\n            ) : null}\n\n            <CardBody>\n              <Button\n                color='info'\n                onClick={() => this.setState({ edit: true })}>\n                Edit\n              </Button>\n\n              <Button color='danger' onClick={() => this.delete(post._id)}>\n                Delete\n              </Button>\n              <CardTitle tag='h5'>{post.title}</CardTitle>\n              <CardSubtitle tag='h6' className='mb-2 text-muted'>\n                {post.creator}\n                {post.color}\n              </CardSubtitle>\n              <CardText>{post.message}</CardText>\n              <Button onClick={() => this.createLike(post._id)}>\n                {post.likeCount} Likes\n              </Button>\n\n              <Button\n                onClick={() => this.setState({ post_details_show: false })}>\n                CLose\n              </Button>\n            </CardBody>\n            <InputGroup>\n              <Input />\n              <InputGroupAddon addonType='append'>\n                <Button onClick={() => this.createComment(post._id)}>\n                  Comment\n                </Button>\n              </InputGroupAddon>\n            </InputGroup>\n\n            <CardText>Comments</CardText>\n            <CardText>{post.comment}</CardText>\n          </Card>\n        )}\n\n        {this.state.edit ? (\n          <div className='App'>\n            <Container className='formContainer'>\n              <h2>Create new post</h2>\n\n              <Form className='form'>\n                <Col>\n                  <FormGroup>\n                    <Label>Title</Label>\n                    <Input\n                      type='text'\n                      name='title'\n                      onChange={this.handleChange}\n                      id='title'\n                      placeholder={post.title}\n                    />\n                  </FormGroup>\n                </Col>\n\n                <Col>\n                  <FormGroup>\n                    <Label>Creator</Label>\n                    <Input\n                      type='text'\n                      name='creator'\n                      onChange={this.handleChange}\n                      id='creator'\n                      placeholder={post.creator}\n                    />\n                  </FormGroup>\n                </Col>\n\n                <Col>\n                  <FormGroup>\n                    <Label>Comment</Label>\n                    <Input\n                      type='text'\n                      name='comment'\n                      onChange={this.handleChange}\n                      id='comment'\n                      placeholder={post.comment}\n                    />\n                  </FormGroup>\n                </Col>\n\n                <Col>\n                  <FormGroup>\n                    <Label>Color</Label>\n                    <Input\n                      type='text'\n                      name='color'\n                      onChange={this.handleChange}\n                      id='color'\n                      placeholder={post.color}\n                    />\n                  </FormGroup>\n                </Col>\n\n                <Col>\n                  <FormGroup>\n                    <Label>Tags</Label>\n                    <Input\n                      type='text'\n                      name='tags'\n                      onChange={this.handleChange}\n                      id='tags'\n                      placeholder={post.tags}\n                    />\n                  </FormGroup>\n                </Col>\n\n                <Col>\n                  <FormGroup>\n                    <Label for='examplePassword'>Message</Label>\n                    <Input\n                      type='text'\n                      onChange={this.handleChange}\n                      name='message'\n                      id='examplePassword'\n                      placeholder={post.message}\n                    />\n                  </FormGroup>\n                </Col>\n\n                <Button onClick={() => this.editPosts(post._id)}>Update</Button>\n              </Form>\n            </Container>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n","/Users/shravanmeena/Desktop/mern/lifeblog/client/src/PostCreate.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":99,"column":15,"nodeType":"57","endLine":99,"endColumn":71},{"ruleId":"58","severity":1,"message":"59","line":3,"column":3,"nodeType":"60","messageId":"61","endLine":3,"endColumn":11},{"ruleId":"58","severity":1,"message":"62","line":5,"column":3,"nodeType":"60","messageId":"61","endLine":5,"endColumn":16},{"ruleId":"58","severity":1,"message":"63","line":7,"column":3,"nodeType":"60","messageId":"61","endLine":7,"endColumn":6},{"ruleId":"58","severity":1,"message":"64","line":8,"column":3,"nodeType":"60","messageId":"61","endLine":8,"endColumn":10},{"ruleId":"58","severity":1,"message":"65","line":9,"column":3,"nodeType":"60","messageId":"61","endLine":9,"endColumn":10},{"ruleId":"58","severity":1,"message":"66","line":10,"column":3,"nodeType":"60","messageId":"61","endLine":10,"endColumn":23},{"ruleId":"58","severity":1,"message":"67","line":11,"column":3,"nodeType":"60","messageId":"61","endLine":11,"endColumn":17},{"ruleId":"58","severity":1,"message":"68","line":12,"column":3,"nodeType":"60","messageId":"61","endLine":12,"endColumn":15},{"ruleId":"58","severity":1,"message":"69","line":13,"column":3,"nodeType":"60","messageId":"61","endLine":13,"endColumn":15},{"ruleId":"55","severity":1,"message":"56","line":109,"column":15,"nodeType":"57","endLine":109,"endColumn":77},{"ruleId":"58","severity":1,"message":"70","line":10,"column":3,"nodeType":"60","messageId":"61","endLine":10,"endColumn":17},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Collapse' is defined but never used.","Identifier","unusedVar","'NavbarToggler' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'InputGroupText' is defined but never used.","no-global-assign","no-unsafe-negation"]